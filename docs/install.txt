WebPasswordSafe Installation Instructions

To build and install from source:

1. Requirements:
	a. Java SE JDK 6.0 +
	b. Java Servlet Container (i.e. Apache Tomcat 5.5+)
	c. JDBC compatible RDBMS (i.e. MySQL 5.x)
	d. Maven 2.2.x

2. Download WebPasswordSafe project source via SVN (http://code.google.com/p/webpasswordsafe/source/checkout) to new directory "webpasswordsafe"

3. Install 3rd party JAR files locally that aren't in public Maven repositories (you'll need to download them yourself):
    a. GWT 2.0.3 (http://code.google.com/webtoolkit/)
        mvn install:install-file -DgroupId=com.google.gwt -DartifactId=gwt-user -Dversion=2.0.3 -Dpackaging=jar -Dfile=gwt-user.jar
        mvn install:install-file -DgroupId=com.google.gwt -DartifactId=gwt-servlet -Dversion=2.0.3 -Dpackaging=jar -Dfile=gwt-servlet.jar
        mvn install:install-file -DgroupId=com.google.gwt -DartifactId=gwt-dev -Dversion=2.0.3 -Dpackaging=jar -Dfile=gwt-dev.jar
        mvn install:install-file -DgroupId=com.google.gwt -DartifactId=gwt-soyc-vis -Dversion=2.0.3 -Dpackaging=jar -Dfile=gwt-soyc-vis.jar
    b. ExtGWT 2.1.1 (http://www.extjs.com/products/gxt/)
        mvn install:install-file -DgroupId=com.extjs -DartifactId=gxt -Dversion=2.1.1 -Dpackaging=jar -Dfile=gxt.jar
    c. GWT-SL 1.0 (http://gwt-widget.sourceforge.net/) WAR file
        mvn install:install-file -DgroupId=net.sf.gwt-widget -DartifactId=gwt-sl -Dversion=1.0 -Dpackaging=jar -Dfile=gwt-sl.jar
        mvn install:install-file -DgroupId=trove -DartifactId=trove -Dversion=2.0.4 -Dpackaging=jar -Dfile=trove-2.0.4.jar
    d. JasperReports 3.7.1 (http://sourceforge.net/projects/jasperreports/)
        mvn install:install-file -DgroupId=jasperreports -DartifactId=jasperreports -Dversion=3.7.1 -Dpackaging=jar -Dfile=jasperreports-3.7.1.jar
    e. OWASP ESAPI Java EE 2.0 rc5 (http://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API#tab=Java_EE)
        mvn install:install-file -DgroupId=org.owasp -DartifactId=esapi -Dversion=2.0-rc5 -Dpackaging=jar -Dfile=ESAPI-2.0-rc5.jar

4. Copy contents of ExtGWT's GXT/resources directory into webpasswordsafe/war/gxt/

5. Edit webpasswordsafe/war/WEB-INF/jdbc.properties changing values specific to your environment

6. Edit webpasswordsafe/war/WEB-INF/encryption.properties changing values specific to your environment
    a. If using ESAPI for encryption... FIXME (copy esapi directory, blah blah) edit ESAPI.properties and generate new MasterKey and MasterSalt values
    b. If using Jasypt for encryption...

7. Run "mvn clean package -DskipTests" from the webpasswordsafe directory

8. Verify your specific JDBC JAR file is in your J2EE server's appropriate shared classpath directory.

9. Deploy the WAR file generated in webpasswordsafe/target to your J2EE server (Tomcat) as WebPasswordSafe.war
    a. It is recommended you configure your web server to only accept SSL connections for this application

10. Connect to URL http(s)://host:port/WebPasswordSafe/ using default login and password "admin"/"admin"

11. Change default admin password, create new users and begin using, you are done!
